extractAIC(lm1)
x11()
par(mfrow=c(2,2))
plot(lm1)
#by hand
summary$call(lm1)
#by hand
summary(lm1)$call
#vif
vif(lm1)
#by hand
#summary(lm1)$call
lm_RCS<- lm(ricoverati_con_sintomi ~. -terapia_intensiva , data=cov_lm1)
1/(1-summary(lm_RCS)$r.squared)
lm_D<- lm(deceduti ~. -terapia_intensiva , data=cov_lm1)
1/(1-summary(lm_TI_D)$r.squared)
1/(1-summary(lm_D)$r.squared)
summary(lm1)
lm1_step <- step(lm1)
summary(lm1_step)
extractAIC(lm1)
extractAIC(lm1_step)
x11()
par(mfrow=c(2,2))
plot(lm1_step)
summary(lm1)
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
lm1_ridge$lambda
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=seq(0.1,10,0.001), data = cov_lm1)
lm1_ridge$lambda
extractAIC(lm1_ridge)
lm2 <- lm(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
library(RColorBrewer)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(6,'Dark2')
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(6,'Dark2')
matplot( gr$lambda, t(gr$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
matplot( lm1_ridge$lambda, t(gr$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Dark2')
brewer.pal()
brewer.all
brewer.all()
x11()
display.brewer.all()
display.brewer.pal((9,'Set1'))
display.brewer.pal((9,"Set1"))
display.brewer.pal("Set1")
display.brewer.pal('Set1')
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Set1')
mycol
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
lm2 <- lm(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=seq(0,2,0.001), data = cov_lm1)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Set1')
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
select(lm1_ridge)
abline(v = 0.248, lty = 2, col = 'red')
lm2 <- lm(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=seq(0,1.5,0.001), data = cov_lm1)
select(lm1_ridge)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Set1')
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
abline(v = 0.248, lty = 2, col = 'red')
lm1_ridge$coef[,1]
abs((lm1_ridge$coef[,lm1_ridge$lam == 0.68] - lm1_ridge$coef[,1]) / lm1_ridge$coef[,1])
abs((lm1_ridge$coef[,lm1_ridge$lam == 0.248] - lm1_ridge$coef[,1]) / lm1_ridge$coef[,1])
lambda_selected<-lm1_ridge$lambda[which(lm1_ridge$GCV==min(lm1_ridge$GCV))]
lambda_selected
select(lm1_ridge)
lm1_ridge_GCV <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=lambda_selected, data = cov_lm1)
coef(lm_ridge_GCV)
coef(lm2)
coef(lm1_ridge_GCV)
# Loadin' necessary libraries
library(tidyverse)
library(corrplot)
library(PerformanceAnalytics)
library(car)
library(ggplot2)
library(hrbrthemes)
library(ggpubr)
library(dplyr)
library(MASS)
library(regclass)
library(RColorBrewer)
library(runner)
library(pracma)
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("/home/walter/DSSC/I/SM/exam/Covid19.csv")
# Selecting the variables/period of interest
upper.date <- "2021-01-31"
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
cov <- cov %>% dplyr::select(data, terapia_intensiva,  deceduti, totale_casi,
totale_positivi, nuovi_positivi)
# Dimessi_guariti produces NAs coefficents when fitted (?)
cov$data <- as.Date(cov$data)
cov <- filter(cov, cov$data >= lower.date, cov$data <= upper.date)
# Uploading ad adding the color dataset
color_orig <- read_csv("/home/walter/DSSC/I/SM/exam/color.csv")
color <- subset(color_orig, color_orig$denominazione_regione == region)
names(color)
color <- dplyr::select(color, "data", "colore")
color <- subset(color, color$data <= upper.date)
color <- subset(color, color$data <= upper.date)
color <- subset(color, color$data >= lower.date)
color <- color[order(color$data),]
cov <- merge(cov,color, by.x = "data", by.y = "data", all.x = TRUE)
cov[is.na(cov)] <- "pre_decreto"
cov$colore <- as.factor(cov$colore)
levels(cov$colore) <- c('Orange', 'Yellow', 'Pre.decreto', 'Red')
# Reordering levels
cov$colore <- relevel(cov$colore, "Red")
cov$colore <- relevel(cov$colore, "Orange")
# Selecting the variables/period of interest
upper.date <- "2021-01-31"
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
region <- "Campania"
color <- subset(color_orig, color_orig$denominazione_regione == region)
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("/home/walter/DSSC/I/SM/exam/Covid19.csv")
# Selecting the variables/period of interest
upper.date <- "2021-01-31"
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
cov <- cov %>% dplyr::select(data, terapia_intensiva,  deceduti, totale_casi,
totale_positivi, nuovi_positivi)
# Dimessi_guariti produces NAs coefficents when fitted (?)
cov$data <- as.Date(cov$data)
cov <- filter(cov, cov$data >= lower.date, cov$data <= upper.date)
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("/home/walter/DSSC/I/SM/exam/Covid19.csv")
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("EDA_V2/Covid19.csv")
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("EDA_V2/Covid19.csv")
setwd("D:/University of Trieste/statistical Data Science/Final project/covid_analysis")
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("EDA_V2/Covid19.csv")
# Selecting the variables/period of interest
upper.date <- "2021-01-31"
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
cov <- cov %>% dplyr::select(data, terapia_intensiva,  deceduti, totale_casi,
totale_positivi, nuovi_positivi)
# Dimessi_guariti produces NAs coefficents when fitted (?)
cov$data <- as.Date(cov$data)
cov <- filter(cov, cov$data >= lower.date, cov$data <= upper.date)
# Uploading ad adding the color dataset
color_orig <- read_csv("/home/walter/DSSC/I/SM/exam/color.csv")
# Uploading ad adding the color dataset
color_orig <- read_csv("EDA_V2/color.csv")
color <- subset(color_orig, color_orig$denominazione_regione == region)
names(color)
color <- dplyr::select(color, "data", "colore")
color <- subset(color, color$data <= upper.date)
color <- subset(color, color$data >= lower.date)
color <- color[order(color$data),]
cov <- merge(cov,color, by.x = "data", by.y = "data", all.x = TRUE)
cov[is.na(cov)] <- "pre_decreto"
cov$colore <- as.factor(cov$colore)
levels(cov$colore) <- c('Orange', 'Yellow', 'Pre.decreto', 'Red')
# Reordering levels
cov$colore <- relevel(cov$colore, "Red")
cov$colore <- relevel(cov$colore, "Orange")
cov$colore <- relevel(cov$colore, "Yellow")
cov$colore <- relevel(cov$colore, "Pre.decreto")
# Unclassing colors
cov$colore <- unclass(cov$colore)
levels(cov$colore)
# Upload and prepare the dataset vax and add it to cov
vax_orig <- read_csv("/home/walter/DSSC/I/SM/exam/Vax.csv")
# Upload and prepare the dataset vax and add it to cov
vax_orig <- read_csv("EDA_V2/Vax.csv")
vax <- subset(vax_orig,vax_orig$nome_area == region)
vax <- dplyr::select(vax, data_somministrazione, totale)
vax <- subset(vax,vax$data_somministrazione <= upper.date)
vax <- rename(vax,dayly_vax = totale)
vax <- vax[order(vax$data_somministrazione),]
vax$tot_vax <- cumsum(vax$dayly_vax)
pop_campania = 5624260
vax$perc_vax <- vax$tot_vax/pop_campania * 100
cov <- merge(cov,vax, by.x = "data", by.y = "data_somministrazione",
all.x = TRUE)
cov <- dplyr::select(cov, -tot_vax, -dayly_vax)
cov[is.na(cov)] <- 0
# We notice some outliers and e choose to discard them
cov <- cov[-which.max(cov$terapia_intensiva), ]
# Renaiming
names(cov) <- c('Date', 'ICU', 'Deceased', 'Total.cases', 'Total.positives',
'New.positives', 'Color', 'Percentage.vaccinated')
untouched.cov <- cov
cov <- untouched.cov
sliding.ICU <- runner(
cov$ICU,
k = 7,
lag = 1,
f = mean # Taking the mean
)
cov$Sliding.ICU <- sliding.ICU
cov <- filter(cov, cov$Date >= actual.lower.date)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date, data = cov)
summary(sliding.lm1)
extractAIC(sliding.lm1) # AIC: 529
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated, data = cov)
cov<-select(cov,-Date,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,-Date,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov <- filter(cov, cov$Date >= actual.lower.date)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
cov<-filter(cov,-Date,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
names(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("EDA_V2/Covid19.csv")
# Selecting the variables/period of interest
upper.date <- "2021-01-31"
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
cov <- cov %>% dplyr::select(data, terapia_intensiva,  deceduti, totale_casi,
totale_positivi, nuovi_positivi)
# Dimessi_guariti produces NAs coefficents when fitted (?)
cov$data <- as.Date(cov$data)
cov <- filter(cov, cov$data >= lower.date, cov$data <= upper.date)
# Uploading ad adding the color dataset
color_orig <- read_csv("EDA_V2/color.csv")
color <- subset(color_orig, color_orig$denominazione_regione == region)
names(color)
color <- dplyr::select(color, "data", "colore")
color <- subset(color, color$data <= upper.date)
color <- subset(color, color$data >= lower.date)
color <- color[order(color$data),]
cov <- merge(cov,color, by.x = "data", by.y = "data", all.x = TRUE)
cov[is.na(cov)] <- "pre_decreto"
cov$colore <- as.factor(cov$colore)
levels(cov$colore) <- c('Orange', 'Yellow', 'Pre.decreto', 'Red')
# Reordering levels
cov$colore <- relevel(cov$colore, "Red")
cov$colore <- relevel(cov$colore, "Orange")
cov$colore <- relevel(cov$colore, "Yellow")
cov$colore <- relevel(cov$colore, "Pre.decreto")
# Unclassing colors
cov$colore <- unclass(cov$colore)
levels(cov$colore)
# Upload and prepare the dataset vax and add it to cov
vax_orig <- read_csv("EDA_V2/Vax.csv")
vax <- subset(vax_orig,vax_orig$nome_area == region)
vax <- dplyr::select(vax, data_somministrazione, totale)
vax <- subset(vax,vax$data_somministrazione <= upper.date)
vax <- rename(vax,dayly_vax = totale)
vax <- vax[order(vax$data_somministrazione),]
vax$tot_vax <- cumsum(vax$dayly_vax)
pop_campania = 5624260
vax$perc_vax <- vax$tot_vax/pop_campania * 100
cov <- merge(cov,vax, by.x = "data", by.y = "data_somministrazione",
all.x = TRUE)
cov <- dplyr::select(cov, -tot_vax, -dayly_vax)
cov[is.na(cov)] <- 0
# We notice some outliers and e choose to discard them
cov <- cov[-which.max(cov$terapia_intensiva), ]
# Renaiming
names(cov) <- c('Date', 'ICU', 'Deceased', 'Total.cases', 'Total.positives',
'New.positives', 'Color', 'Percentage.vaccinated')
untouched.cov <- cov
cov <- untouched.cov
sliding.ICU <- runner(
cov$ICU,
k = 7,
lag = 1,
f = mean # Taking the mean
)
cov$Sliding.ICU <- sliding.ICU
cov <- filter(cov, cov$Date >= actual.lower.date)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
names(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
str(cov)
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date, data = cov)
summary(sliding.lm1)
cov<-select(cov,New.positives,Sliding.ICU)
names(cov)
str(cov)
cov<-filter(cov,New.positives,Sliding.ICU)
cov<-filter(cov,New.positives,Sliding.ICU)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
names(cov)
str(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,New.positives,Sliding.ICU)
str(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
# Uploading ad adding the color dataset
color_orig <- read_csv("EDA_V2/color.csv")
color <- subset(color_orig, color_orig$denominazione_regione == region)
names(color)
color <- dplyr::select(color, "data", "colore")
color <- subset(color, color$data <= upper.date)
color <- subset(color, color$data >= lower.date)
color <- color[order(color$data),]
cov <- merge(cov,color, by.x = "data", by.y = "data", all.x = TRUE)
cov[is.na(cov)] <- "pre_decreto"
cov$colore <- as.factor(cov$colore)
levels(cov$colore) <- c('Orange', 'Yellow', 'Pre.decreto', 'Red')
# Reordering levels
cov$colore <- relevel(cov$colore, "Red")
cov$colore <- relevel(cov$colore, "Orange")
# DATASET PREPARATION ##########################################################
# Upload and prepare the dataset cov
# Import the dataset
cov_orig <- read.csv("EDA_V2/Covid19.csv")
# Selecting the variables/period of interest
upper.date <- "2021-01-31"
lower.date <- "2020-09-01"
actual.lower.date <- "2020-10-01"
region <- "Campania"
cov <- filter(cov_orig,denominazione_regione == region)
cov <- cov %>% dplyr::select(data, terapia_intensiva,  deceduti, totale_casi,
totale_positivi, nuovi_positivi)
# Dimessi_guariti produces NAs coefficents when fitted (?)
cov$data <- as.Date(cov$data)
cov <- filter(cov, cov$data >= lower.date, cov$data <= upper.date)
# Uploading ad adding the color dataset
color_orig <- read_csv("EDA_V2/color.csv")
color <- subset(color_orig, color_orig$denominazione_regione == region)
names(color)
color <- dplyr::select(color, "data", "colore")
color <- subset(color, color$data <= upper.date)
color <- subset(color, color$data >= lower.date)
color <- color[order(color$data),]
cov <- merge(cov,color, by.x = "data", by.y = "data", all.x = TRUE)
cov[is.na(cov)] <- "pre_decreto"
cov$colore <- as.factor(cov$colore)
levels(cov$colore) <- c('Orange', 'Yellow', 'Pre.decreto', 'Red')
# Reordering levels
cov$colore <- relevel(cov$colore, "Red")
cov$colore <- relevel(cov$colore, "Orange")
cov$colore <- relevel(cov$colore, "Yellow")
cov$colore <- relevel(cov$colore, "Pre.decreto")
# Unclassing colors
cov$colore <- unclass(cov$colore)
levels(cov$colore)
# Upload and prepare the dataset vax and add it to cov
vax_orig <- read_csv("EDA_V2/Vax.csv")
vax <- subset(vax_orig,vax_orig$nome_area == region)
vax <- dplyr::select(vax, data_somministrazione, totale)
vax <- subset(vax,vax$data_somministrazione <= upper.date)
vax <- rename(vax,dayly_vax = totale)
vax <- vax[order(vax$data_somministrazione),]
vax$tot_vax <- cumsum(vax$dayly_vax)
pop_campania = 5624260
vax$perc_vax <- vax$tot_vax/pop_campania * 100
cov <- merge(cov,vax, by.x = "data", by.y = "data_somministrazione",
all.x = TRUE)
cov <- dplyr::select(cov, -tot_vax, -dayly_vax)
cov[is.na(cov)] <- 0
# We notice some outliers and e choose to discard them
cov <- cov[-which.max(cov$terapia_intensiva), ]
# Renaiming
names(cov) <- c('Date', 'ICU', 'Deceased', 'Total.cases', 'Total.positives',
'New.positives', 'Color', 'Percentage.vaccinated')
untouched.cov <- cov
cov <- untouched.cov
sliding.ICU <- runner(
cov$ICU,
k = 7,
lag = 1,
f = mean # Taking the mean
)
cov$Sliding.ICU <- sliding.ICU
cov <- filter(cov, cov$Date >= actual.lower.date)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
names(cov)
str(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov$Sliding.ICU <- sliding.ICU
cov <- filter(cov, cov$Date >= actual.lower.date)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
names(cov)
str(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,New.positives,Sliding.ICU)
cov$Sliding.ICU <- sliding.ICU
cov <- filter(cov, cov$Date >= actual.lower.date)
# High correlation with 'terapia_intensiva'
cor(cov$ICU, cov$Sliding.ICU) # Pretty high as expected
names(cov)
str(cov)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,New.positives,Sliding.ICU)
cov<-filter(cov,-Deceased,-Total.cases,-Total.positives, -Color,-Percentage.vaccinated)
cov<-filter(cov,Deceased,Total.cases,Total.positives, Color,Percentage.vaccinated)
cov<-filter(cov,New.positives,Sliding.ICU)
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date, data = cov)
summary(sliding.lm1)
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date,-New.positives, data = cov)
summary(sliding.lm1)
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date,-New.positives, data = cov)
summary(sliding.lm1)
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~ -Date,-New.positives, data = cov)
summary(sliding.lm1)
# Fit complete LM with original variables plus added variable
sliding.lm1 <- lm(ICU ~. -Date, data = cov)
summary(sliding.lm1)
names(cov)
str(cov)
cov<-filter(cov,New.positives,Sliding.ICU,-Deceased)
cov<-filter(cov,New.positives,Sliding.ICU)
library(tidyverse)
library(mgcv)
library(mlr)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
cov <- dplyr::select(cov,-X)
cov$colore <- as.factor(cov$colore)
library(tidyverse)
library(mgcv)
library(mlr)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
library(tidyverse)
library(mgcv)
library(mlr)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
setwd("D:/University of Trieste/statistical Data Science/Final project/covid_analysis")
library(tidyverse)
library(mgcv)
library(mlr)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
cov <- dplyr::select(cov,-X)
