# upload and prepare the dataset cov
#cov<-read.csv("https://raw.githubusercontent.com/pcm-dpc/
#COVID-19/master/dati-regioni/dpc-covid19-ita-regioni.csv")
##view(cov)
#write.csv(cov,"Covid19.csv")
# import the dataset
cov_orig <- read.csv("Covid19.csv")
### in this project we are going to work with the region Campania, Intensive Care Units (terapia_intensiva) )
# select the variables/period of interest
cov<-filter(cov_orig,denominazione_regione=="Campania")
nrow(cov)
names(cov)
#view(cov)
cov<-dplyr::select(cov,data,ricoverati_con_sintomi,terapia_intensiva,ingressi_terapia_intensiva,
totale_ospedalizzati,isolamento_domiciliare,totale_positivi,
nuovi_positivi,dimessi_guariti,deceduti,totale_casi,tamponi,casi_testati)
#view(cov)
sum(is.na(cov$data))
cov$data<-as.Date(cov$data)
#view(cov)
cov<-filter(cov,cov$data>="2020-09-30",cov$data<="2021-02-01")
#view(cov)
nrow(cov)
sum(is.na(cov$ingressi_terapia_intensiva))
cov<-dplyr::select(cov, -ingressi_terapia_intensiva)
#view(cov)
cov <- cov[order(cov$data),]
cov$deceduti_daily <- c(cov$deceduti[1],diff(cov$deceduti))
cov$dimessi_guariti_dayly <- c(cov$dimessi_guariti[1],diff(cov$dimessi_guariti))
cov$casi_testati_daily <- c(cov$casi_testati[1],diff(cov$casi_testati))
cov$terapia_intensiva_ieri <- c(NA, head(cov$terapia_intensiva, length(cov$terapia_intensiva) - 1))
cov<-filter(cov,cov$data>="2020-10-01",cov$data<="2021-02-01")
cov$nuovi_positivi_norm <- cov$nuovi_positivi/cov$casi_testati_daily
# upload and prepare the dataset vax and add it to cov
# https://github.com/pcm-dpc/COVID-19 ???
vax_orig <- read_csv("Vax.csv")
names(vax_orig)
vax <- subset(vax_orig,vax_orig$nome_area == "Campania")
vax <- dplyr::select(vax,data_somministrazione,totale)
vax <- subset(vax,vax$data_somministrazione <= '2021-02-01')
vax <- rename(vax,dayly_vax = totale)
vax <- vax[order(vax$data_somministrazione),]
vax$tot_vax <- cumsum(vax$dayly_vax)
pop_campania = 5624260 #https://www.tuttitalia.it/campania/statistiche/popolazione-andamento-demografico/
vax$perc_vax <- vax$tot_vax/pop_campania*100
cov <- merge(cov,vax, by.x = "data", by.y = "data_somministrazione", all.x = TRUE)
cov[is.na(cov)] <- 0
# for now I choose to consider only %of vax, then we can choose what we prefer
cov <- dplyr::select(cov, -tot_vax, -dayly_vax)
# upload ad add colore dataset
# https://github.com/imcatta/restrizioni_regionali_covid
color_orig <- read_csv("color.csv")
color <- subset(color_orig,color_orig$denominazione_regione == "Campania")
names(color)
color <- dplyr::select(color,"data","colore")
color <- subset(color,color$data <= '2021-02-01')
color <- subset(color,color$data >= '2020-10-01')
color <- color[order(color$data),]
cov <- merge(cov,color, by.x = "data", by.y = "data", all.x = TRUE)
cov[is.na(cov)] <- "pre_decreto"
cov$colore <- as.factor(cov$colore)
###############################################################################
#            SHOW THE VARIABLES AND CHOOSE WHICH ONE TO CONSIDER              #
###############################################################################
# plot the dependencies between ricoverati_con_sintomi terapia_intensiva totale_ospedalizzati
p1 <- ggplot(cov) +
geom_line(mapping = aes(x=data, y = ricoverati_con_sintomi, color = "ricoverati_con_sintomi")) +
geom_line(mapping = aes(x=data, y = terapia_intensiva, color = "terapia_intensiva")) +
geom_line(mapping = aes(x=data, y = totale_ospedalizzati, color = "totale_ospedalizzati")) +
theme_ipsum()
#x11()
p1
# we can discard totale_ospedalizzati
# same with totale_ospedalizzati isolamento_domiciliare totale_positivi
p2 <- ggplot(cov) +
geom_line(mapping = aes(x=data, y = totale_ospedalizzati, color = "totale_ospedalizzati")) +
geom_line(mapping = aes(x=data, y = isolamento_domiciliare, color = "isolamento_domiciliare")) +
geom_line(mapping = aes(x=data, y = totale_positivi, color = "totale_positivi")) +
theme_ipsum()
#x11()
p2
# we can discard totale_positivi
cov <- dplyr::select(cov, -totale_ospedalizzati, -totale_positivi)
# let's take a look at all the variables wrt date
names(cov)
date_TI <- ggplot(cov, aes(x=data, y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_RCS <- ggplot(cov, aes(x=data, y=ricoverati_con_sintomi, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_ID <- ggplot(cov, aes(x=data, y=isolamento_domiciliare, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_NP <- ggplot(cov, aes(x=data, y=nuovi_positivi, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_DG <- ggplot(cov, aes(x=data, y=dimessi_guariti, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_D <- ggplot(cov, aes(x=data, y=deceduti, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_TC <- ggplot(cov, aes(x=data, y=totale_casi, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_T <- ggplot(cov, aes(x=data, y=tamponi, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_CT <- ggplot(cov, aes(x=data, y=casi_testati, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_PV <- ggplot(cov, aes(x=data, y=perc_vax, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_TII <- ggplot(cov, aes(x=data, y=terapia_intensiva_ieri, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
#date_TI
#date_RCS
#date_ID
#date_NP
#date_DG
#date_D
#date_TC
#date_T
#date_CT
#date_PV
#x11()
ggarrange(date_TI,date_RCS,date_ID,date_NP,date_DG,date_D,date_TC,
date_T,date_CT,date_PV, date_TII,
ncol = 3, nrow = 4)
# we also choose not to consider totale_casi and tamponi
# (see Walter Work to see how to consider the casi_testati variable)
# because they are cumulative variables that we are not particularly interested in
cov <- dplyr::select(cov, -totale_casi, -tamponi, -casi_testati)
# we see what happens if we consider deceduti and dimessi_guariti on a daily basis
date_DGD <- ggplot(cov, aes(x=data, y=dimessi_guariti_dayly, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
date_DD <- ggplot(cov, aes(x=data, y=deceduti_daily, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
#x11()
ggarrange(date_TI,date_RCS,date_ID,date_NP,date_DGD,date_DD,date_PV,
ncol = 3, nrow = 3)
# should we consider nuovi_positivi or nuovi_positivi normalized?
date_NPN <- ggplot(cov, aes(x=data, y=nuovi_positivi_norm, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
#x11()
ggarrange(date_NP,date_NPN,
ncol = 2, nrow = 1)
# we notice some outliers
watchout_point_TI <- max(cov$terapia_intensiva)
watchout_point_TII <- max(cov$terapia_intensiva_ieri)
# we choose to discard them
cov <- cov[-which.max(cov$terapia_intensiva),]
cov <- cov[-which.max(cov$terapia_intensiva_ieri),]
# plot terapia_intensiva wrt all the variables
names(cov)
date_TI <- ggplot(cov, aes(x=data, y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
RCS_TI <- ggplot(cov, aes(x=ricoverati_con_sintomi, y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
ID_TI <- ggplot(cov, aes(x=isolamento_domiciliare, y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
NP_TI <- ggplot(cov, aes(x=nuovi_positivi,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
DG_TI <- ggplot(cov, aes(x=dimessi_guariti,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
D_TI <- ggplot(cov, aes(x=deceduti,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
PV_TI <- ggplot(cov, aes(x=perc_vax,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
TII_TI <- ggplot(cov, aes(x=terapia_intensiva_ieri,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
#x11()
ggarrange(date_TI,RCS_TI,ID_TI,NP_TI,DG_TI,D_TI ,PV_TI, TII_TI,
ncol = 3, nrow = 3)
# we see what happens if we consider deceduti and dimessi_guariti on a daily basis
DGD_TI <- ggplot(cov, aes(x=dimessi_guariti_dayly,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
DD_TI <- ggplot(cov, aes(x=deceduti_daily,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
#x11()
ggarrange(date_TI,RCS_TI,ID_TI,NP_TI,DGD_TI,DD_TI ,PV_TI,
ncol = 3, nrow = 3)
# should we consider nuovi_positivi or nuovi_positivi normalized?
NPN_TI <- ggplot(cov, aes(x=nuovi_positivi_norm,y=terapia_intensiva, color=colore)) +
geom_point(size=3) +
scale_color_manual(values=c("orange", "yellow", "grey", "red")) +
theme_ipsum()
#x11()
ggarrange(NP_TI,NPN_TI,
ncol = 2, nrow = 1)
# Discuss together these results
# we prefer to keep the original variables, because we don't have any improvement after this trasformations
cov <- dplyr::select(cov, -deceduti_daily,-dimessi_guariti_dayly, -casi_testati_daily, -nuovi_positivi_norm)
###############################################################################
#                         CORRELATION ANALYSIS                                #
###############################################################################
# correlation analysis
#corr <- cor(dplyr::select(cov, -data, -colore))
#corr
##x11()
#corrplot(corr, method = "ellipse")
names(cov)
#x11()
chart.Correlation(cov[,c("ricoverati_con_sintomi","terapia_intensiva","isolamento_domiciliare",
"nuovi_positivi","dimessi_guariti","deceduti","terapia_intensiva_ieri","perc_vax")])
# Discuss together these results
write.csv(cov,"cov_post_EDA.csv")
setwd("C:/Users/Cecilia/OneDrive/Desktop/Ceci/UniTS/Statistical_Methods_for_Data_Science/Progetto/covid_analysis/model_prediction")
read.csv(cov,"cov_post_EDA.csv")
read.csv("cov_post_EDA.csv")
cov <- read.csv("cov_post_EDA.csv")
names(cov)
View(cov)
cov <- dplyr::select(cov,-X)
cov <- dplyr::select(cov,-X)
names(cov)
View(cov)
cov <- read.csv("cov_post_EDA.csv")
names(cov)
cov <- dplyr::select(cov,-X)
names(cov)
names(cov)
cov_lm1 <- dplyr::select(cov,-terapia_intensiva_ieri)
names(cov_lm1)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
View(cov)
cov <- dplyr::select(cov,-X)
names(cov)
cov_lm1 <- dplyr::select(cov,-terapia_intensiva_ieri)
View(cov_lm1)
names(cov_lm1)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
cov$colore <- as.factor(cov$colore)
names(cov)
cov_lm1 <- dplyr::select(cov,-terapia_intensiva_ieri)
names(cov_lm1)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
library(tidyverse)
library(corrplot)
library(PerformanceAnalytics)
library(car)
library(ggplot2)
library(hrbrthemes)
library(ggpubr)
library(dplyr)
library(MASS)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
x11()
plot(cov)
str(cov)
cov$data <- as.Date(cov$data)
names(cov)
str(cov)
x11()
plot(cov)
cov_lm1 <- dplyr::select(cov,-terapia_intensiva_ieri)
names(cov_lm1)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
extractAIC(lm1)
library(tidyverse)
library(corrplot)
library(PerformanceAnalytics)
library(car)
library(ggplot2)
library(hrbrthemes)
library(ggpubr)
library(dplyr)
library(MASS)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
cov <- dplyr::select(cov,-X)
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
cov <- dplyr::select(cov,-X)
cov$colore <- as.factor(cov$colore)
cov$data <- as.Date(cov$data)
names(cov)
str(cov)
cov_lm1 <- dplyr::select(cov,-terapia_intensiva_ieri)
names(cov_lm1)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
extractAIC(lm1)
x11()
par(mfrow=c(2,2))
plot(lm1)
corr <- cor(dplyr::select(cov_lm1, -data, -colore))
corr
x11()
corrplot(corr, method = "ellipse")
x11()
chart.Correlation(cov[,c("ricoverati_con_sintomi","terapia_intensiva","isolamento_domiciliare",
"nuovi_positivi","dimessi_guariti","deceduti","terapia_intensiva_ieri","perc_vax")])
x11()
chart.Correlation(cov_lm1[,c("ricoverati_con_sintomi","terapia_intensiva","isolamento_domiciliare",
"nuovi_positivi","dimessi_guariti","deceduti","terapia_intensiva_ieri","perc_vax")])
names(cov_lm1)
x11()
chart.Correlation(cov_lm1[,c("ricoverati_con_sintomi","terapia_intensiva","isolamento_domiciliare",
"nuovi_positivi","dimessi_guariti","deceduti","perc_vax")])
#vif
vif(lm1)
help(vif)
VIF(lm1)
install.packages("regclass")
library(regclass)
VIF(lm1)
#vif
vif(lm1)
#by hand
lm_TI_RCS<- lm(terapia_intensiva ~ ricoverati_con_sintomi, data=cov_lm1)
1/(1-summary(lm_TI_RCS)$r.squared)
lm_TI_D<- lm(terapia_intensiva ~ deceduti, data=cov_lm1)
1/(1-summary(lm_TI_D)$r.squared)
#by hand
lm_RCS<- lm(ricoverati_con_sintomi ~. -data -colore -terapia_intensiva , data=cov_lm1)
1/(1-summary(lm_RCS)$r.squared)
#by hand
call(lm1)
#by hand
summary$call(lm1)
###############################################################################
#                             LINEAR MODEL                                    #
###############################################################################
# load libraries
library(tidyverse)
library(corrplot)
library(PerformanceAnalytics)
library(car)
library(ggplot2)
library(hrbrthemes)
library(ggpubr)
library(dplyr)
library(MASS)
library(regclass)
#setwd("C:/Users/Cecilia/OneDrive/Desktop/Ceci/UniTS/Statistical_Methods_for_Data_Science/Progetto/covid_analysis/model_prediction")
# upload data created with script EDA_V2
cov <- read.csv("cov_post_EDA.csv")
cov <- dplyr::select(cov,-X)
cov$colore <- as.factor(cov$colore)
cov$data <- as.Date(cov$data)
names(cov)
str(cov)
#x11()
#plot(cov)
# Fit complete LM with original variables
cov_lm1 <- dplyr::select(cov,-terapia_intensiva_ieri)
names(cov_lm1)
lm1 <- lm(terapia_intensiva ~. , data = cov_lm1)
lm1
summary(lm1)
extractAIC(lm1)
x11()
par(mfrow=c(2,2))
plot(lm1)
#by hand
summary$call(lm1)
#by hand
summary(lm1)$call
#vif
vif(lm1)
#by hand
#summary(lm1)$call
lm_RCS<- lm(ricoverati_con_sintomi ~. -terapia_intensiva , data=cov_lm1)
1/(1-summary(lm_RCS)$r.squared)
lm_D<- lm(deceduti ~. -terapia_intensiva , data=cov_lm1)
1/(1-summary(lm_TI_D)$r.squared)
1/(1-summary(lm_D)$r.squared)
summary(lm1)
lm1_step <- step(lm1)
summary(lm1_step)
extractAIC(lm1)
extractAIC(lm1_step)
x11()
par(mfrow=c(2,2))
plot(lm1_step)
summary(lm1)
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
lm1_ridge$lambda
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=seq(0.1,10,0.001), data = cov_lm1)
lm1_ridge$lambda
extractAIC(lm1_ridge)
lm2 <- lm(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
library(RColorBrewer)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(6,'Dark2')
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(6,'Dark2')
matplot( gr$lambda, t(gr$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
matplot( lm1_ridge$lambda, t(gr$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Dark2')
brewer.pal()
brewer.all
brewer.all()
x11()
display.brewer.all()
display.brewer.pal((9,'Set1'))
display.brewer.pal((9,"Set1"))
display.brewer.pal("Set1")
display.brewer.pal('Set1')
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Set1')
mycol
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
lm2 <- lm(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=seq(0,2,0.001), data = cov_lm1)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Set1')
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
select(lm1_ridge)
abline(v = 0.248, lty = 2, col = 'red')
lm2 <- lm(terapia_intensiva ~ . -perc_vax, data = cov_lm1)
lm1_ridge <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=seq(0,1.5,0.001), data = cov_lm1)
select(lm1_ridge)
# Visualization  of  ridge  regression:   trace  plots
mycol <- brewer.pal(9,'Set1')
x11()
matplot( lm1_ridge$lambda, t(lm1_ridge$coef), type = "l", xlab = expression(lambda),
ylab = expression(hat(beta)),
main = "Ridge Traceplot", col = mycol, lwd = 2, lty = 1)
legend('topright', rownames(lm1_ridge$coef), col = mycol, lwd = 2, lty = 1 )
abline(h = 0, lwd = 2, lty = 2)
abline(v = 0.248, lty = 2, col = 'red')
lm1_ridge$coef[,1]
abs((lm1_ridge$coef[,lm1_ridge$lam == 0.68] - lm1_ridge$coef[,1]) / lm1_ridge$coef[,1])
abs((lm1_ridge$coef[,lm1_ridge$lam == 0.248] - lm1_ridge$coef[,1]) / lm1_ridge$coef[,1])
lambda_selected<-lm1_ridge$lambda[which(lm1_ridge$GCV==min(lm1_ridge$GCV))]
lambda_selected
select(lm1_ridge)
lm1_ridge_GCV <- lm.ridge(terapia_intensiva ~ . -perc_vax,lambda=lambda_selected, data = cov_lm1)
coef(lm_ridge_GCV)
coef(lm2)
coef(lm1_ridge_GCV)
